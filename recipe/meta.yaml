{% set version = "1.6.0" %}
# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion
{% set torch_proc_type = "cuda" if cuda_compiler_version != "None" else "cpu" %}

package:
  name: pytorch_cluster
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/t/torch_cluster/torch_cluster-{{ version }}.tar.gz
  sha256: 249c1bd8c33a887b22bf569a59d0868545804032123594dd8c76ba1885859c39

build:
  number: 1
  skip: true  # [win]
  # as of pytorch 1.13, conda-forge only builds for CUDA 11.2+, see
  # https://github.com/conda-forge/conda-forge-pinning-feedstock/issues/3491
  skip: true  # [cuda_compiler_version in ("10.2", "11.0", "11.1")]

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - pytorch                                # [build_platform != target_platform]
    - pytorch =*={{ torch_proc_type }}*      # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [cuda_compiler_version not in (undefined, 'None')]
  host:
    - python
    - pip
    - pytorch
    - pytorch =*={{ torch_proc_type }}*
    - setuptools
    - pytest-runner
    - scipy
  run:
    - python
    - scipy
    - pytest
    - pytest-cov
  run_constrained:
    # 2022/02/05 hmaarrfk
    # While conda packaging seems to allow us to specify
    # constraints on the same package in different lines
    # the resulting package doesn't have the ability to
    # be specified in multiples lines
    # This makes it tricky to use run_exports
    # we add the GPU constraint in the run_constrained
    # to allow us to have "two" constraints on the
    # running package  
    - pytorch =*={{ torch_proc_type }}*

test:
  imports:
    - torch_cluster

about:
  home: https://github.com/rusty1s/pytorch_cluster
  summary: PyTorch Extension Library of Optimized Graph Cluster Algorithms
  license: MIT
  license_file: LICENSE
  dev_url: https://github.com/rusty1s/pytorch_cluster

extra:
  recipe-maintainers:
    - mxr-conda
    - dsangillo
    - pstjohn
